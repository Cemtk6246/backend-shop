plugins {
  id 'org.jetbrains.kotlin.jvm' version libs.versions.springKotlinVersion
  id 'org.jetbrains.kotlin.plugin.spring' version libs.versions.springKotlinVersion
  id 'org.springframework.boot' version libs.versions.springBootVersion
  id 'io.spring.dependency-management' version libs.versions.springDepManagementVersion
  id 'com.google.protobuf' version libs.versions.protobufVersion
  id 'org.jetbrains.kotlin.plugin.jpa' version libs.versions.springKotlinVersion
}

group = 'own.little.project'
version = '0.0.1-SNAPSHOT'
description = 'olp'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

ext {
  set('springGrpcVersion', "0.10.0")
}

dependencies {
  // spring dependencies starter
  implementation libs.bundles.spring.boot.starter.web
  implementation libs.bundles.spring.boot.starter.data

  // openApi
  implementation libs.spring.openApi.starter.webmvc.ui

  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'io.grpc:grpc-services'
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.flywaydb:flyway-database-postgresql'
  implementation 'org.flywaydb:flyway-mysql'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'
  implementation 'org.springframework.grpc:spring-grpc-server-web-spring-boot-starter'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
  testImplementation 'org.springframework.graphql:spring-graphql-test'
  testImplementation 'org.springframework.grpc:spring-grpc-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
  }
}

kotlin {
  compilerOptions {
    freeCompilerArgs.addAll '-Xjsr305=strict'
  }
}

protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc'
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        option '@generated=omit'
      }
    }
  }
}

allOpen {
  annotation 'jakarta.persistence.Entity'
  annotation 'jakarta.persistence.MappedSuperclass'
  annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
  useJUnitPlatform()
}
