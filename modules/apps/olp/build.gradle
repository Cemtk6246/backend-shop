group = 'own.little.project'
version = '0.0.1-SNAPSHOT'
description = 'olp'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  // spring dependencies starter
  implementation libs.bundles.spring.boot.starter.web
  implementation libs.bundles.spring.boot.starter.data

  // openApi
  implementation libs.spring.openApi.starter.webmvc.ui

  implementation libs.jackson.module.kotlin
  implementation libs.grpc.services
  implementation libs.flyway.core
  implementation libs.flyway.mysql

  implementation libs.spring.grpc.server.web.starter
  compileOnly libs.lombok
  annotationProcessor libs.lombok

  implementation 'org.jetbrains.kotlin:kotlin-reflect'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.mysql:mysql-connector-j'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
  compilerOptions {
    freeCompilerArgs.addAll '-Xjsr305=strict'
  }
}

allOpen {
  annotation 'jakarta.persistence.Entity'
  annotation 'jakarta.persistence.MappedSuperclass'
  annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
  useJUnitPlatform()
}

jar {
  enabled = false
  archiveClassifier = ''
}

bootJar {
  enabled = true
  archiveClassifier = ''
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}